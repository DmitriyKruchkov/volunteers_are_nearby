name: CI/CD

on:
  push:
    branches: [feature_17]

jobs:
  linting:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install poetry
          poetry install
      - name: Linting
        run: |
          echo "starting time is $(date)" > log-CI
          ruff check --fix
      - name: Log job status
        run: |
          echo "$GITHUB_JOB is $GITHUB_JOB_STATUS" >> log-CI
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: flaskr/

  testing:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install poetry
          poetry install
      - name: Testing
        run: |
          pytest
      - name: Log job status
        run: |
          echo "$GITHUB_JOB is $GITHUB_JOB_STATUS" >> log-CI
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: log-CI

  documentation:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install poetry
          poetry install
      - name: Documentation
        run: |
          cd docs
          python3 create_all_docs.py
      - name: Log job status
        run: |
          echo "$GITHUB_JOB is $GITHUB_JOB_STATUS" >> log-CI
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: docs/


  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy
        run: |
          docker-compose down
          docker-compose up -d
      - name: Log job status
        run: |
          echo "$GITHUB_JOB is $GITHUB_JOB_STATUS" >> log-CI
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: log-CI


  notify:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Notify
        run: |
          echo "end time is $(date)" >> log-CI
          sh ci-notify.sh log-CI
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: log-CI
    